"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/admin/districts/page",{

/***/ "(app-pages-browser)/./utils/imageUtils.js":
/*!*****************************!*\
  !*** ./utils/imageUtils.js ***!
  \*****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getDistrictImageUrl: function() { return /* binding */ getDistrictImageUrl; },\n/* harmony export */   getImageDimensions: function() { return /* binding */ getImageDimensions; },\n/* harmony export */   getImageUrl: function() { return /* binding */ getImageUrl; },\n/* harmony export */   getParkImageUrl: function() { return /* binding */ getParkImageUrl; },\n/* harmony export */   isImageAccessible: function() { return /* binding */ isImageAccessible; }\n/* harmony export */ });\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js\");\n/**\n * Utility functions for handling image URLs across the application\n */ /**\n * Get the proper image URL for display\n * @param {string} imagePath - The image path from the database\n * @param {string} fallback - Fallback image path\n * @returns {string} - Properly formatted image URL\n */ const getImageUrl = function(imagePath) {\n    let fallback = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;\n    var _process_env_NEXT_PUBLIC_API_URL;\n    // Use the base URL without /api suffix for static files\n    const BASE_URL = ((_process_env_NEXT_PUBLIC_API_URL = process.env.NEXT_PUBLIC_API_URL) === null || _process_env_NEXT_PUBLIC_API_URL === void 0 ? void 0 : _process_env_NEXT_PUBLIC_API_URL.replace(\"/api\", \"\")) || \"http://localhost:5001\";\n    // If no image path or it's the default no-photo\n    if (!imagePath || imagePath === \"no-photo.jpg\") {\n        return fallback;\n    }\n    // If it's already a full URL, return as is\n    if (imagePath.startsWith(\"http://\") || imagePath.startsWith(\"https://\")) {\n        return imagePath;\n    }\n    // If it starts with /, it's a relative path from the backend\n    if (imagePath.startsWith(\"/\")) {\n        return \"\".concat(BASE_URL).concat(imagePath);\n    }\n    // Otherwise, assume it's just a filename in uploads\n    return \"\".concat(BASE_URL, \"/uploads/\").concat(imagePath);\n};\n/**\n * Get district image URL\n * @param {object} district - District object with image property\n * @returns {string} - Image URL or null for placeholder\n */ const getDistrictImageUrl = (district)=>{\n    var _district;\n    return getImageUrl((_district = district) === null || _district === void 0 ? void 0 : _district.image);\n};\n/**\n * Get park image URL\n * @param {object} park - Park object with picture property\n * @returns {string} - Image URL or null for placeholder\n */ const getParkImageUrl = (park)=>{\n    var _park;\n    return getImageUrl((_park = park) === null || _park === void 0 ? void 0 : _park.picture);\n};\n/**\n * Check if an image URL is valid/accessible\n * @param {string} url - Image URL to check\n * @returns {Promise<boolean>} - Whether the image is accessible\n */ const isImageAccessible = async (url)=>{\n    if (!url) return false;\n    try {\n        const response = await fetch(url, {\n            method: \"HEAD\"\n        });\n        return response.ok;\n    } catch (error) {\n        return false;\n    }\n};\n/**\n * Get image dimensions\n * @param {string} url - Image URL\n * @returns {Promise<{width: number, height: number}>} - Image dimensions\n */ const getImageDimensions = (url)=>{\n    return new Promise((resolve, reject)=>{\n        const img = new Image();\n        img.onload = ()=>{\n            resolve({\n                width: img.width,\n                height: img.height\n            });\n        };\n        img.onerror = reject;\n        img.src = url;\n    });\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3V0aWxzL2ltYWdlVXRpbHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7O0NBRUMsR0FFRDs7Ozs7Q0FLQyxHQUNNLE1BQU1BLGNBQWMsU0FBQ0M7UUFBV0MsNEVBQVc7UUFFL0JDO0lBRGpCLHdEQUF3RDtJQUN4RCxNQUFNQyxXQUFXRCxFQUFBQSxtQ0FBQUEsT0FBT0EsQ0FBQ0UsR0FBRyxDQUFDQyxtQkFBbUIsY0FBL0JILHVEQUFBQSxpQ0FBaUNJLE9BQU8sQ0FBQyxRQUFRLFFBQU87SUFFekUsZ0RBQWdEO0lBQ2hELElBQUksQ0FBQ04sYUFBYUEsY0FBYyxnQkFBZ0I7UUFDOUMsT0FBT0M7SUFDVDtJQUVBLDJDQUEyQztJQUMzQyxJQUFJRCxVQUFVTyxVQUFVLENBQUMsY0FBY1AsVUFBVU8sVUFBVSxDQUFDLGFBQWE7UUFDdkUsT0FBT1A7SUFDVDtJQUVBLDZEQUE2RDtJQUM3RCxJQUFJQSxVQUFVTyxVQUFVLENBQUMsTUFBTTtRQUM3QixPQUFPLEdBQWNQLE9BQVhHLFVBQXFCLE9BQVZIO0lBQ3ZCO0lBRUEsb0RBQW9EO0lBQ3BELE9BQU8sR0FBdUJBLE9BQXBCRyxVQUFTLGFBQXFCLE9BQVZIO0FBQ2hDLEVBQUU7QUFFRjs7OztDQUlDLEdBQ00sTUFBTVEsc0JBQXNCLENBQUNDO1FBQ2ZBO0lBQW5CLE9BQU9WLGFBQVlVLFlBQUFBLHNCQUFBQSxnQ0FBQUEsVUFBVUMsS0FBSztBQUNwQyxFQUFFO0FBRUY7Ozs7Q0FJQyxHQUNNLE1BQU1DLGtCQUFrQixDQUFDQztRQUNYQTtJQUFuQixPQUFPYixhQUFZYSxRQUFBQSxrQkFBQUEsNEJBQUFBLE1BQU1DLE9BQU87QUFDbEMsRUFBRTtBQUVGOzs7O0NBSUMsR0FDTSxNQUFNQyxvQkFBb0IsT0FBT0M7SUFDdEMsSUFBSSxDQUFDQSxLQUFLLE9BQU87SUFFakIsSUFBSTtRQUNGLE1BQU1DLFdBQVcsTUFBTUMsTUFBTUYsS0FBSztZQUFFRyxRQUFRO1FBQU87UUFDbkQsT0FBT0YsU0FBU0csRUFBRTtJQUNwQixFQUFFLE9BQU9DLE9BQU87UUFDZCxPQUFPO0lBQ1Q7QUFDRixFQUFFO0FBRUY7Ozs7Q0FJQyxHQUNNLE1BQU1DLHFCQUFxQixDQUFDTjtJQUNqQyxPQUFPLElBQUlPLFFBQVEsQ0FBQ0MsU0FBU0M7UUFDM0IsTUFBTUMsTUFBTSxJQUFJQztRQUNoQkQsSUFBSUUsTUFBTSxHQUFHO1lBQ1hKLFFBQVE7Z0JBQUVLLE9BQU9ILElBQUlHLEtBQUs7Z0JBQUVDLFFBQVFKLElBQUlJLE1BQU07WUFBQztRQUNqRDtRQUNBSixJQUFJSyxPQUFPLEdBQUdOO1FBQ2RDLElBQUlNLEdBQUcsR0FBR2hCO0lBQ1o7QUFDRixFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3V0aWxzL2ltYWdlVXRpbHMuanM/YjgyZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFV0aWxpdHkgZnVuY3Rpb25zIGZvciBoYW5kbGluZyBpbWFnZSBVUkxzIGFjcm9zcyB0aGUgYXBwbGljYXRpb25cbiAqL1xuXG4vKipcbiAqIEdldCB0aGUgcHJvcGVyIGltYWdlIFVSTCBmb3IgZGlzcGxheVxuICogQHBhcmFtIHtzdHJpbmd9IGltYWdlUGF0aCAtIFRoZSBpbWFnZSBwYXRoIGZyb20gdGhlIGRhdGFiYXNlXG4gKiBAcGFyYW0ge3N0cmluZ30gZmFsbGJhY2sgLSBGYWxsYmFjayBpbWFnZSBwYXRoXG4gKiBAcmV0dXJucyB7c3RyaW5nfSAtIFByb3Blcmx5IGZvcm1hdHRlZCBpbWFnZSBVUkxcbiAqL1xuZXhwb3J0IGNvbnN0IGdldEltYWdlVXJsID0gKGltYWdlUGF0aCwgZmFsbGJhY2sgPSBudWxsKSA9PiB7XG4gIC8vIFVzZSB0aGUgYmFzZSBVUkwgd2l0aG91dCAvYXBpIHN1ZmZpeCBmb3Igc3RhdGljIGZpbGVzXG4gIGNvbnN0IEJBU0VfVVJMID0gcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfQVBJX1VSTD8ucmVwbGFjZSgnL2FwaScsICcnKSB8fCAnaHR0cDovL2xvY2FsaG9zdDo1MDAxJztcblxuICAvLyBJZiBubyBpbWFnZSBwYXRoIG9yIGl0J3MgdGhlIGRlZmF1bHQgbm8tcGhvdG9cbiAgaWYgKCFpbWFnZVBhdGggfHwgaW1hZ2VQYXRoID09PSAnbm8tcGhvdG8uanBnJykge1xuICAgIHJldHVybiBmYWxsYmFjaztcbiAgfVxuXG4gIC8vIElmIGl0J3MgYWxyZWFkeSBhIGZ1bGwgVVJMLCByZXR1cm4gYXMgaXNcbiAgaWYgKGltYWdlUGF0aC5zdGFydHNXaXRoKCdodHRwOi8vJykgfHwgaW1hZ2VQYXRoLnN0YXJ0c1dpdGgoJ2h0dHBzOi8vJykpIHtcbiAgICByZXR1cm4gaW1hZ2VQYXRoO1xuICB9XG5cbiAgLy8gSWYgaXQgc3RhcnRzIHdpdGggLywgaXQncyBhIHJlbGF0aXZlIHBhdGggZnJvbSB0aGUgYmFja2VuZFxuICBpZiAoaW1hZ2VQYXRoLnN0YXJ0c1dpdGgoJy8nKSkge1xuICAgIHJldHVybiBgJHtCQVNFX1VSTH0ke2ltYWdlUGF0aH1gO1xuICB9XG5cbiAgLy8gT3RoZXJ3aXNlLCBhc3N1bWUgaXQncyBqdXN0IGEgZmlsZW5hbWUgaW4gdXBsb2Fkc1xuICByZXR1cm4gYCR7QkFTRV9VUkx9L3VwbG9hZHMvJHtpbWFnZVBhdGh9YDtcbn07XG5cbi8qKlxuICogR2V0IGRpc3RyaWN0IGltYWdlIFVSTFxuICogQHBhcmFtIHtvYmplY3R9IGRpc3RyaWN0IC0gRGlzdHJpY3Qgb2JqZWN0IHdpdGggaW1hZ2UgcHJvcGVydHlcbiAqIEByZXR1cm5zIHtzdHJpbmd9IC0gSW1hZ2UgVVJMIG9yIG51bGwgZm9yIHBsYWNlaG9sZGVyXG4gKi9cbmV4cG9ydCBjb25zdCBnZXREaXN0cmljdEltYWdlVXJsID0gKGRpc3RyaWN0KSA9PiB7XG4gIHJldHVybiBnZXRJbWFnZVVybChkaXN0cmljdD8uaW1hZ2UpO1xufTtcblxuLyoqXG4gKiBHZXQgcGFyayBpbWFnZSBVUkxcbiAqIEBwYXJhbSB7b2JqZWN0fSBwYXJrIC0gUGFyayBvYmplY3Qgd2l0aCBwaWN0dXJlIHByb3BlcnR5XG4gKiBAcmV0dXJucyB7c3RyaW5nfSAtIEltYWdlIFVSTCBvciBudWxsIGZvciBwbGFjZWhvbGRlclxuICovXG5leHBvcnQgY29uc3QgZ2V0UGFya0ltYWdlVXJsID0gKHBhcmspID0+IHtcbiAgcmV0dXJuIGdldEltYWdlVXJsKHBhcms/LnBpY3R1cmUpO1xufTtcblxuLyoqXG4gKiBDaGVjayBpZiBhbiBpbWFnZSBVUkwgaXMgdmFsaWQvYWNjZXNzaWJsZVxuICogQHBhcmFtIHtzdHJpbmd9IHVybCAtIEltYWdlIFVSTCB0byBjaGVja1xuICogQHJldHVybnMge1Byb21pc2U8Ym9vbGVhbj59IC0gV2hldGhlciB0aGUgaW1hZ2UgaXMgYWNjZXNzaWJsZVxuICovXG5leHBvcnQgY29uc3QgaXNJbWFnZUFjY2Vzc2libGUgPSBhc3luYyAodXJsKSA9PiB7XG4gIGlmICghdXJsKSByZXR1cm4gZmFsc2U7XG4gIFxuICB0cnkge1xuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2godXJsLCB7IG1ldGhvZDogJ0hFQUQnIH0pO1xuICAgIHJldHVybiByZXNwb25zZS5vaztcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbn07XG5cbi8qKlxuICogR2V0IGltYWdlIGRpbWVuc2lvbnNcbiAqIEBwYXJhbSB7c3RyaW5nfSB1cmwgLSBJbWFnZSBVUkxcbiAqIEByZXR1cm5zIHtQcm9taXNlPHt3aWR0aDogbnVtYmVyLCBoZWlnaHQ6IG51bWJlcn0+fSAtIEltYWdlIGRpbWVuc2lvbnNcbiAqL1xuZXhwb3J0IGNvbnN0IGdldEltYWdlRGltZW5zaW9ucyA9ICh1cmwpID0+IHtcbiAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICBjb25zdCBpbWcgPSBuZXcgSW1hZ2UoKTtcbiAgICBpbWcub25sb2FkID0gKCkgPT4ge1xuICAgICAgcmVzb2x2ZSh7IHdpZHRoOiBpbWcud2lkdGgsIGhlaWdodDogaW1nLmhlaWdodCB9KTtcbiAgICB9O1xuICAgIGltZy5vbmVycm9yID0gcmVqZWN0O1xuICAgIGltZy5zcmMgPSB1cmw7XG4gIH0pO1xufTtcbiJdLCJuYW1lcyI6WyJnZXRJbWFnZVVybCIsImltYWdlUGF0aCIsImZhbGxiYWNrIiwicHJvY2VzcyIsIkJBU0VfVVJMIiwiZW52IiwiTkVYVF9QVUJMSUNfQVBJX1VSTCIsInJlcGxhY2UiLCJzdGFydHNXaXRoIiwiZ2V0RGlzdHJpY3RJbWFnZVVybCIsImRpc3RyaWN0IiwiaW1hZ2UiLCJnZXRQYXJrSW1hZ2VVcmwiLCJwYXJrIiwicGljdHVyZSIsImlzSW1hZ2VBY2Nlc3NpYmxlIiwidXJsIiwicmVzcG9uc2UiLCJmZXRjaCIsIm1ldGhvZCIsIm9rIiwiZXJyb3IiLCJnZXRJbWFnZURpbWVuc2lvbnMiLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsImltZyIsIkltYWdlIiwib25sb2FkIiwid2lkdGgiLCJoZWlnaHQiLCJvbmVycm9yIiwic3JjIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./utils/imageUtils.js\n"));

/***/ })

});